/**
 * {{&summary}}
 * request: {{&methodName}}
 * url: {{&methodName}}URL
 * method: {{&methodName}}_TYPE
 * raw_url: {{&methodName}}_RAW_URL
{{#parameters}}
{{^isSingleton}} * @param {{&camelCaseName}} - {{&description}}{{/isSingleton}}
{{/parameters}}
 * @return Promise<{{&responseType}}> - {{&responseTypeTitle}} - {{&responseTypeDescription}}
 */
{{&methodName}}({{#if parameters}}{{#joinComma parameters}}
  {{#isPathParameter}}{{&name}}: {{&flowType}}{{/isPathParameter}}
  {{#isQueryParameter}}{{&name}}: {{&flowType}}{{/isQueryParameter}}
  {{/joinComma}}{{/if}}): Promise<{{&responseType}}> {
  return this._axios.{{toLowerCase method}}(`{{&_path}}`{{#unless isGET}}).then(res => res.data);{{/unless}}{{#if isGET}}{{#if queryParameters}}, {
    params: {
      {{#queryParameters}}
      {{&name}}: {{&name}},
      {{/queryParameters}}
    }
  }{{/if}}).then(res => res.data);{{/if}}
}
